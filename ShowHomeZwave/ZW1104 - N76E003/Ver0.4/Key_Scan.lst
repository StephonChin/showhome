C51 COMPILER V9.52.0.0   KEY_SCAN                                                          02/02/2018 17:16:05 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEY_SCAN
OBJECT MODULE PLACED IN Key_Scan.obj
COMPILER INVOKED BY: C:\Keil\C51\C51\BIN\C51.EXE Source\Key_Scan.c BROWSE INCDIR(.\Include) DEBUG OBJECTEXTEND PRINT(.\K
                    -ey_Scan.lst) OBJECT(Key_Scan.obj)

line level    source

   1          /************************************************************************
   2                  *
   3                  * @FileName             Key_Scan.c
   4                  * @Date                         21-April-2017
   5                  * @Author                       DS.Chin
   6                  * 
   7          *************************************************************************/
   8          #include "Key_Scan.h"
   9          
  10          
  11          
  12          /* <---- Gloable Variables -----------------------------------> */
  13          _TypeSensor_E           SensorStatus;
  14          _Flag                                           KeySleepFlag;
  15          _Flag                                           TrigForbidFlag;
  16          _Uint8                                  BattCheckNum;
  17          
  18          /**
  19                  * @FunctionName         Key_Scan
  20                  * @Date                                         21-April-2017
  21                  * @Author                                       DS.Chin
  22                  */
  23          void Key_Scan(void)
  24          {
  25   1              static _Uint8           KeyReleaseTime;
  26   1              static _Flag            KeyReleaseFlag;
  27   1              
  28   1              static _Uint8           KeyPressTime;
  29   1              static _Flag            KeyPressFlag;
  30   1              
  31   1              static _Flag            PressCntFlag;
  32   1              static _Uint8           PressCntTime;
  33   1              static _Uint8           KeyPressCnt;
  34   1              
  35   1              
  36   1              static _Uint8           BattCheckOnTime;
  37   1              static _Uint8           BattCheckOffTime;
  38   1              static _Uint8           BattCheckOnFlag;
  39   1              static _Uint8           BattCheckOffFlag = TRUE;
  40   1              
  41   1              
  42   1              //SENSOR脚打开
  43   1              if (PORT_SENSOR == RESET)
  44   1              {
  45   2                      KeyPressTime = 0;
  46   2                      
  47   2                      if (KeyReleaseFlag == FALSE)
  48   2                      {
  49   3                              KeySleepFlag = FALSE;
  50   3                              KeyReleaseTime++;
  51   3                              if (KeyReleaseTime >= 200)      //2s
  52   3                              {
  53   4                                      SensorStatus            = SENSOR_OPEN;
  54   4                                      KeyReleaseFlag  = TRUE;
C51 COMPILER V9.52.0.0   KEY_SCAN                                                          02/02/2018 17:16:05 PAGE 2   

  55   4                                      TrigForbidFlag  = TRUE;
  56   4                                      WKCON |= BIT3;
  57   4                                      KeyPressFlag            = FALSE;
  58   4                              }
  59   3                      }
  60   2                      else
  61   2                      {
  62   3                              KeySleepFlag = TRUE;
  63   3                      }
  64   2              }
  65   1              
  66   1              
  67   1              //SENSOR脚触发
  68   1              else 
  69   1              {
  70   2                      KeyReleaseTime = 0;
  71   2                      
  72   2                      if (KeyPressFlag == FALSE)
  73   2                      {
  74   3                              KeySleepFlag = FALSE;
  75   3                              
  76   3                              PressCntFlag = TRUE;                            //SENSOR触发脚开始计时标志位
  77   3                              KeyPressTime++;
  78   3                              if (KeyPressTime > 2)
  79   3                              {
  80   4                                      KeyPressTime = 0;
  81   4                                      if (KeyPressCnt < 50)
  82   4                                      {
  83   5                                              KeyPressCnt++;
  84   5                                      }
  85   4                              }
  86   3                      }
  87   2                      else
  88   2                      {
  89   3                              KeySleepFlag = TRUE;
  90   3                      }
  91   2              }
  92   1              
  93   1              
  94   1              if (PressCntFlag  == TRUE)
  95   1              {
  96   2                      PressCntTime++;
  97   2                      if (PressCntTime >= 200)
  98   2                      {
  99   3                              PressCntTime = 0;
 100   3                              PressCntFlag = FALSE;
 101   3                              
 102   3                              //当在2秒内触发次数超过20次时，触发成功
 103   3                              if (KeyPressCnt >=  20)
 104   3                              {
 105   4                                      KeyPressCnt     = 0;
 106   4                                      
 107   4                                      if (TrigForbidFlag == FALSE)            
 108   4                                      {
 109   5                                              SensorStatus    = SENSOR_CLOSE;
 110   5                                              KeyPressFlag    = TRUE;
 111   5                                              KeyReleaseFlag = FALSE;
 112   5                                      }
 113   4                              }
 114   3                      }
 115   2              }
 116   1              else
C51 COMPILER V9.52.0.0   KEY_SCAN                                                          02/02/2018 17:16:05 PAGE 3   

 117   1              {
 118   2                      PressCntTime = 0;
 119   2              }
 120   1              
 121   1              
 122   1              
 123   1              
 124   1              if (PORT_BATT == SET)
 125   1              {
 126   2                      BattCheckOffTime        = 0;
 127   2                      BattCheckOffFlag        = FALSE;
 128   2                      
 129   2                      BattCheckOnTime++;
 130   2                      if (BattCheckOnTime > 1)
 131   2                      {
 132   3                              BattCheckOnTime = 0;
 133   3                              if (BattCheckOnFlag == FALSE)
 134   3                              {
 135   4                                      BattCheckOnFlag = TRUE;
 136   4                                      BattCheckNum    = 1;
 137   4                              }
 138   3                      }
 139   2              }
 140   1              else
 141   1              {
 142   2                      BattCheckOnTime = 0;
 143   2                      BattCheckOnFlag = FALSE;
 144   2                      
 145   2                      BattCheckOffTime++;
 146   2                      if (BattCheckOffTime > 1)
 147   2                      {
 148   3                              BattCheckOffTime = 0;
 149   3                              if (BattCheckOffFlag == FALSE)
 150   3                              {
 151   4                                      BattCheckOffFlag = TRUE;
 152   4                                      BattCheckNum = 2;
 153   4                              }
 154   3                      }
 155   2              }
 156   1              
 157   1              
 158   1      
 159   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    180    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
