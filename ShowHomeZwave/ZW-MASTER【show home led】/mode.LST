C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MODE
OBJECT MODULE PLACED IN mode.OBJ
COMPILER INVOKED BY: C:\Keil51\C51\BIN\C51.EXE mode.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**********************
   2          *作者:chenyk
   3          *日期:2014.10.29
   4          ***********************/
   5          #include "mc96f6508a.h"
   6          #include "mode.h"
   7          
   8          uchar  step;
   9          uchar led_step;
  10          uchar mode_step;
  11          bit mode_init=0;
  12          bit power_on_flag;
  13          bit power_ok_flag;
  14          bit power_err_flag;
  15          bit conditionst_flag;
  16          bit conditionsn_flag;
  17          bit sensor_trigger_flag;
  18          bit sensor_normal_flag;
  19          bit control_flag;
  20          bit alarm_normal_flag;
  21          bit alarm_trigger_flag;
  22          
  23          //---------------------------
  24          // @Modify 2015.10.13 DS.Chin
  25          bit removeFlag;
  26          bit removeOkFlag;
  27          bit addFlag;
  28          bit addOkFlag;
  29          bit removeErrFlag;
  30          bit rmvAddErrFlag;
  31          
  32          void RemoveMode(void);
  33          void RemoveOkMode(void);
  34          void RmvAddErrMode(void);
  35          void AddMode(void);
  36          void AddOkMode(void);
  37          //----------------------------
  38          
  39          uchar  trans_number=0;
  40          uchar  power_on_delay_1=0;
  41          uchar  power_on_delay_2=0;
  42          uchar  conditionst_delay_1=0x00;
  43          uchar  conditionst_delay_2=0x00;
  44          uchar  sensor_trigger_delay_1=0x00;
  45          uchar  sensor_trigger_delay_2=0x00;
  46          uchar  control_delay_1=0x00;
  47          uchar  control_delay_2=0x00;
  48          uchar  alarm_trigger_delay_1=0;
  49          uchar  alarm_trigger_delay_2=0;
  50          idata uchar duty_buff[17];
  51          void power_on_mode(void);
  52          void power_ok_mode(void);
  53          void power_err_mode(void);
  54          void conditionst_mode(void);
  55          void conditionsn_mode(void);
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 2   

  56          void sensor_trigger_mode(void);
  57          void sensor_normal_mode(void);
  58          void control_mode(void);
  59          void alarm_normal_mode(void);
  60          void alarm_trigger_mode(void);
  61          void horse_led(void);
  62          void led_chase(void);
  63          
  64          /***********************
  65          *名称:mode_play
  66          *功能:控制rgb亮法（6种）
  67          *输入:无
  68          *输出:无
  69          *修改记录:
  70          ************************/
  71          void mode_play(void)
  72          {
  73   1      //  RemoveMode();
  74   1      //  RemoveOkMode();
  75   1      //  RmvAddErrMode();
  76   1        if(power_on_flag && !power_ok_flag && !power_err_flag) //DS.Chin
  77   1              power_on_mode();
  78   1        if(power_ok_flag) 
  79   1              power_ok_mode();
  80   1        if(power_err_flag)
  81   1              power_err_mode();
  82   1         
  83   1        if(mode_step==0)
  84   1        {   
  85   2        if(conditionst_flag && !conditionst_init) {mode_step=1;conditionst_init=0;}
  86   2        else if(conditionsn_flag) {mode_step=2;conditionsn_init=0;}
  87   2        else if(alarm_normal_flag) {mode_step=3;alarm_normal_init=0;}
  88   2        else if(alarm_trigger_flag && !alarm_trigger_init) {mode_step=4;alarm_trigger_init=0;}
  89   2        else if(sensor_trigger_flag && !sensor_trigger_init) {mode_step=5;sensor_trigger_init=0;}
  90   2        else if(sensor_normal_flag) {mode_step=6;sensor_normal_init=0;}
  91   2        else if(control_flag) {mode_step=7;control_init=0;}
  92   2        //-----------2015.10.13 DS.Chin
  93   2        else if (removeFlag) 
  94   2        {
  95   3          mode_step = 8;
  96   3          removeInit = 0;
  97   3        }
  98   2        else if (removeOkFlag)
  99   2        {
 100   3          mode_step = 9;
 101   3          removeOkInit = 0;
 102   3        }
 103   2        else if (addFlag)
 104   2        {
 105   3          mode_step = 10;
 106   3          addInit = 0;
 107   3        }
 108   2        else if (addOkFlag)
 109   2        {
 110   3          mode_step = 11;
 111   3          addOkInit = 0;
 112   3        }
 113   2        else if (rmvAddErrFlag)
 114   2        {
 115   3          mode_step = 12;
 116   3          rmvAddErrInit = 0;
 117   3        }
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 3   

 118   2        }
 119   1      
 120   1        if((conditionst_flag == 1)&&(mode_step==1)) conditionst_mode();
 121   1        if((conditionsn_flag == 1)&&(mode_step==2)) conditionsn_mode();
 122   1        if((alarm_normal_flag==1)&&(mode_step==3)) alarm_normal_mode();
 123   1        if((alarm_trigger_flag==1)&&(mode_step==4)) alarm_trigger_mode();
 124   1        if((sensor_trigger_flag==1)&&(mode_step==5)) sensor_trigger_mode();
 125   1        if((sensor_normal_flag==1)&&(mode_step==6)) sensor_normal_mode();
 126   1        if((control_flag==1)&&(mode_step==7)) control_mode();
 127   1        
 128   1        //----------2015.10.13 DS.Chin
 129   1        if (removeFlag && mode_step == 8)
 130   1        {
 131   2          RemoveMode();
 132   2        }
 133   1        if (removeOkFlag && mode_step == 9)
 134   1        {
 135   2          RemoveOkMode();
 136   2        }
 137   1        if (addFlag && mode_step == 10)
 138   1        {
 139   2          AddMode();
 140   2        }
 141   1        if (addOkFlag && mode_step == 11)
 142   1        {
 143   2          AddOkMode();
 144   2        }
 145   1        if (rmvAddErrFlag && mode_step == 12)
 146   1        {
 147   2          RmvAddErrMode();
 148   2        }
 149   1      }
 150          
 151          /**********************
 152          *名称:power_on_ok
 153          *功能:上电自检，RED  LED1-- LED17  
 154                GREEN LED17--LED1 
 155              BLUE LED1--LED17循环跑马灯
 156          *输入:无
 157          *输出:无
 158          *修改备注:
 159          ***********************/
 160          void power_on_mode(void)
 161          {
 162   1        uchar i;
 163   1      
 164   1        if(!power_on_init)
 165   1        {
 166   2          power_on_init=1;
 167   2          power_on_delay_1=0; 
 168   2          step=0;
 169   2          led_step=0; 
 170   2          for(i=0;i<17;i++) 
 171   2          {
 172   3            r_duty[i]=0;
 173   3            g_duty[i]=0;
 174   3            b_duty[i]=0;
 175   3          }
 176   2          r_duty[0]=30;
 177   2        }
 178   1      
 179   1        power_on_delay_1+=1;
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 4   

 180   1        if(power_on_delay_1>20)
 181   1        {
 182   2          power_on_delay_1=0;
 183   2          switch(step)
 184   2          {
 185   3            case 0: 
 186   3            for(i=0;i<17;i++)
 187   3              duty_buff[i]=r_duty[i];      //r
 188   3            horse_led();
 189   3            for(i=0;i<17;i++)
 190   3              r_duty[i]=duty_buff[i];
 191   3            break;
 192   3      
 193   3            case 1:
 194   3            g_duty[16]=30;
 195   3            step+=1;
 196   3            break;
 197   3      
 198   3            case 2:
 199   3            for(i=0;i<17;i++)
 200   3              duty_buff[i]=g_duty[16-i];  //g
 201   3            horse_led();
 202   3            for(i=0;i<17;i++)
 203   3              g_duty[16-i]=duty_buff[i];
 204   3            break;
 205   3      
 206   3            case 3:
 207   3            b_duty[0]=30;
 208   3            step+=1;
 209   3            break;
 210   3      
 211   3            case 4:
 212   3            for(i=0;i<17;i++)
 213   3              duty_buff[i]=b_duty[i];       //b
 214   3            horse_led();
 215   3            for(i=0;i<17;i++)
 216   3              b_duty[i]=duty_buff[i];
 217   3            break;
 218   3      
 219   3            case 5:
 220   3            r_duty[16]=30;
 221   3            step+=1;
 222   3            break;
 223   3      
 224   3            case 6:
 225   3            for(i=0;i<17;i++)
 226   3              duty_buff[i]=r_duty[16-i];        //r
 227   3            horse_led();
 228   3            for(i=0;i<17;i++)
 229   3              r_duty[16-i]=duty_buff[i];
 230   3            break;
 231   3       
 232   3            case 7:
 233   3            g_duty[0]=30;
 234   3            step+=1;
 235   3            break;
 236   3      
 237   3            case 8:
 238   3            for(i=0;i<17;i++)
 239   3              duty_buff[i]=g_duty[i];       //g
 240   3            horse_led();
 241   3            for(i=0;i<17;i++)
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 5   

 242   3              g_duty[i]=duty_buff[i];
 243   3            break;
 244   3      
 245   3            case 9:
 246   3            b_duty[16]=30;
 247   3            step+=1;
 248   3            break;
 249   3      
 250   3            case 10:
 251   3            for(i=0;i<17;i++)
 252   3              duty_buff[i]=b_duty[16-i];        //b
 253   3            horse_led();
 254   3            for(i=0;i<17;i++)
 255   3              b_duty[16-i]=duty_buff[i];
 256   3            break;
 257   3      
 258   3            case 11:
 259   3            r_duty[0]=30;
 260   3            step=0;
 261   3            break;
 262   3      
 263   3          }
 264   2        }
 265   1      }
 266          
 267          /**********************
 268          *名称:horse_led
 269          *功能:
 270          *输入:无
 271          *输出:无
 272          *修改备注:
 273          ***********************/
 274          void horse_led(void)
 275          {
 276   1        if(led_step==0)
 277   1        {
 278   2          duty_buff[0]-=1;
 279   2          if(duty_buff[0]<25)
 280   2          {
 281   3            duty_buff[1]=30;
 282   3            led_step+=1;
 283   3          }
 284   2        }
 285   1      
 286   1        if(led_step==1)
 287   1        {
 288   2          duty_buff[0]-=1;
 289   2          duty_buff[1]-=1;
 290   2          if(duty_buff[1]<25)
 291   2          {
 292   3            duty_buff[2]=30;
 293   3            led_step+=1;
 294   3          }
 295   2        }
 296   1      
 297   1        if(led_step==2)
 298   1        {
 299   2          duty_buff[0]-=1;
 300   2          duty_buff[1]-=1;
 301   2          duty_buff[2]-=1;
 302   2          if(duty_buff[2]<25)
 303   2          {
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 6   

 304   3            duty_buff[3]=30;
 305   3            led_step+=1;
 306   3          }
 307   2        }
 308   1      
 309   1        if(led_step==3)
 310   1        {
 311   2          duty_buff[0]-=1;
 312   2          duty_buff[1]-=1;
 313   2          duty_buff[2]-=1;
 314   2          duty_buff[3]-=1;
 315   2          if(duty_buff[3]<25)
 316   2          {
 317   3            duty_buff[4]=30;
 318   3            led_step+=1;
 319   3          }
 320   2        }
 321   1      
 322   1        if(led_step==4)
 323   1        {
 324   2          duty_buff[0]-=1;
 325   2          duty_buff[1]-=1;
 326   2          duty_buff[2]-=1;
 327   2          duty_buff[3]-=1;
 328   2          duty_buff[4]-=1;
 329   2          if(duty_buff[4]<25)
 330   2          {
 331   3            duty_buff[5]=30;
 332   3            led_step+=1;
 333   3          }
 334   2        }
 335   1      
 336   1        if(led_step==5)
 337   1        {
 338   2          duty_buff[1]-=1;
 339   2          duty_buff[2]-=1;
 340   2          duty_buff[3]-=1;
 341   2          duty_buff[4]-=1;
 342   2          duty_buff[5]-=1;
 343   2          if(duty_buff[5]<25)
 344   2          {
 345   3            duty_buff[6]=30;
 346   3            led_step+=1;
 347   3          }
 348   2        }
 349   1      
 350   1        if(led_step==6)
 351   1        {
 352   2          duty_buff[2]-=1;
 353   2          duty_buff[3]-=1;
 354   2          duty_buff[4]-=1;
 355   2          duty_buff[5]-=1;
 356   2          duty_buff[6]-=1;
 357   2          if(duty_buff[6]<25)
 358   2          {
 359   3            duty_buff[7]=30;
 360   3            led_step+=1;
 361   3          }
 362   2        }
 363   1       
 364   1        if(led_step==7)
 365   1        {
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 7   

 366   2          duty_buff[3]-=1;
 367   2          duty_buff[4]-=1;
 368   2          duty_buff[5]-=1;
 369   2          duty_buff[6]-=1;
 370   2          duty_buff[7]-=1;
 371   2          if(duty_buff[7]<25)
 372   2          {
 373   3            duty_buff[8]=30;
 374   3            led_step+=1;
 375   3          }
 376   2        }
 377   1      
 378   1        if(led_step==8)
 379   1        {
 380   2          duty_buff[4]-=1;
 381   2          duty_buff[5]-=1;
 382   2          duty_buff[6]-=1;
 383   2          duty_buff[7]-=1;
 384   2          duty_buff[8]-=1;
 385   2          if(duty_buff[8]<25)
 386   2          {
 387   3            duty_buff[9]=30;
 388   3            led_step+=1;
 389   3          }   
 390   2        }
 391   1      
 392   1        if(led_step==9)
 393   1        {
 394   2          duty_buff[5]-=1;
 395   2          duty_buff[6]-=1;
 396   2          duty_buff[7]-=1;
 397   2          duty_buff[8]-=1;
 398   2          duty_buff[9]-=1;
 399   2          if(duty_buff[9]<25)
 400   2          {
 401   3            duty_buff[10]=30;
 402   3            led_step+=1;
 403   3          }
 404   2        }
 405   1      
 406   1        if(led_step==10)
 407   1        {
 408   2          duty_buff[6]-=1;
 409   2          duty_buff[7]-=1;
 410   2          duty_buff[8]-=1;
 411   2          duty_buff[9]-=1;
 412   2          duty_buff[10]-=1;
 413   2          if(duty_buff[10]<25)
 414   2          {
 415   3            duty_buff[11]=30;
 416   3            led_step+=1;
 417   3          }
 418   2        }
 419   1      
 420   1        if(led_step==11)
 421   1        {
 422   2          duty_buff[7]-=1;
 423   2          duty_buff[8]-=1;
 424   2          duty_buff[9]-=1;
 425   2          duty_buff[10]-=1;
 426   2          duty_buff[11]-=1;
 427   2          if(duty_buff[11]<25)
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 8   

 428   2          {
 429   3            duty_buff[12]=30;
 430   3            led_step+=1;
 431   3          }
 432   2        }
 433   1      
 434   1        if(led_step==12)
 435   1        {
 436   2          duty_buff[8]-=1;
 437   2          duty_buff[9]-=1;
 438   2          duty_buff[10]-=1;
 439   2          duty_buff[11]-=1;
 440   2          duty_buff[12]-=1;
 441   2          if(duty_buff[12]<25)
 442   2          {
 443   3            duty_buff[13]=30;
 444   3            led_step+=1;
 445   3          }
 446   2        }
 447   1      
 448   1        if(led_step==13)
 449   1        {
 450   2          duty_buff[9]-=1;
 451   2          duty_buff[10]-=1;
 452   2          duty_buff[11]-=1;
 453   2          duty_buff[12]-=1;
 454   2          duty_buff[13]-=1;
 455   2          if(duty_buff[13]<25)
 456   2          {
 457   3            duty_buff[14]=30;
 458   3            led_step+=1;
 459   3          }
 460   2        }
 461   1      
 462   1        if(led_step==14)
 463   1        {
 464   2          duty_buff[10]-=1;
 465   2          duty_buff[11]-=1;
 466   2          duty_buff[12]-=1;
 467   2          duty_buff[13]-=1;
 468   2          duty_buff[14]-=1;
 469   2          if(duty_buff[14]<25)
 470   2          {
 471   3            duty_buff[15]=30;
 472   3            led_step+=1;
 473   3          }
 474   2        }
 475   1      
 476   1        if(led_step==15)
 477   1        {
 478   2          duty_buff[11]-=1;
 479   2          duty_buff[12]-=1;
 480   2          duty_buff[13]-=1;
 481   2          duty_buff[14]-=1;
 482   2          duty_buff[15]-=1;
 483   2          if(duty_buff[15]<25)
 484   2          {
 485   3            duty_buff[16]=30;
 486   3            led_step+=1;
 487   3          }
 488   2        }
 489   1      
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 9   

 490   1        if(led_step==16)
 491   1        {
 492   2          duty_buff[12]-=1;
 493   2          duty_buff[13]-=1;
 494   2          duty_buff[14]-=1;
 495   2          duty_buff[15]-=1;
 496   2          duty_buff[16]-=1;
 497   2          if(duty_buff[16]<25)
 498   2          {
 499   3          //duty_buff[17]=30;
 500   3            led_step+=1;
 501   3          }
 502   2        }
 503   1      
 504   1        if(led_step==17)
 505   1        {
 506   2          duty_buff[13]-=1;
 507   2          duty_buff[14]-=1;
 508   2          duty_buff[15]-=1;
 509   2          duty_buff[16]-=1;
 510   2          if(duty_buff[13]<1)
 511   2          {
 512   3            led_step+=1;
 513   3          }
 514   2        }
 515   1      
 516   1        if(led_step==18)
 517   1        {
 518   2          duty_buff[14]-=1;
 519   2          duty_buff[15]-=1;
 520   2          duty_buff[16]-=1;
 521   2          if(duty_buff[14]<1)
 522   2          {
 523   3            led_step+=1;
 524   3          }
 525   2        }
 526   1      
 527   1        if(led_step==19)
 528   1        {
 529   2          duty_buff[15]-=1;
 530   2          duty_buff[16]-=1;
 531   2          if(duty_buff[15]<1)
 532   2          {
 533   3            led_step+=1;
 534   3          }
 535   2        }
 536   1      
 537   1        if(led_step==20)
 538   1        {
 539   2          duty_buff[16]-=1;
 540   2          if(duty_buff[16]<1)
 541   2          {
 542   3            led_step=0;
 543   3            step+=1;
 544   3          }
 545   2        }
 546   1      } 
 547          /******************************
 548          *名称:power_err_mode
 549          *功能:上电失败G:led1--led17--led1
 550          *输入:无
 551          *输出:无
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 10  

 552          *修改记录:
 553          ******************************/
 554          void power_err_mode(void)
 555          {
 556   1        uchar i;
 557   1      
 558   1        if(!power_err_init)
 559   1        {
 560   2          power_err_init=1;
 561   2          
 562   2          power_on_delay_1=0; 
 563   2          step=0;
 564   2          led_step=0;
 565   2          
 566   2          for(i=0;i<17;i++)
 567   2          {
 568   3            r_duty[i]=0;
 569   3            g_duty[i]=0;
 570   3            b_duty[i]=0;
 571   3          }
 572   2        
 573   2          g_duty[0]=30;
 574   2          power_ok_flag=0;
 575   2          power_on_flag=0;
 576   2          conditionst_flag=0;
 577   2          conditionsn_flag=0;
 578   2          sensor_trigger_flag=0;
 579   2          sensor_normal_flag=0;
 580   2          control_flag=0;
 581   2          alarm_normal_flag=0;
 582   2          alarm_trigger_flag=0;
 583   2          mode_step=0;
 584   2        }
 585   1        
 586   1        power_on_delay_1+=1;
 587   1        if(power_on_delay_1>20)
 588   1        {
 589   2          power_on_delay_1=0;
 590   2          switch(step)
 591   2          {
 592   3            case 0: 
 593   3            for(i=0;i<17;i++)
 594   3              duty_buff[i]=g_duty[i];      //g
 595   3            horse_led();
 596   3            for(i=0;i<17;i++)
 597   3              g_duty[i]=duty_buff[i];
 598   3            break;
 599   3      
 600   3            case 1:
 601   3            g_duty[16]=30;
 602   3            step+=1;
 603   3            break;
 604   3      
 605   3            case 2:
 606   3            for(i=0;i<17;i++)
 607   3              duty_buff[i]=g_duty[16-i];  //g
 608   3            horse_led();
 609   3            for(i=0;i<17;i++)
 610   3              g_duty[16-i]=duty_buff[i];
 611   3            break;
 612   3      
 613   3            case 3:
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 11  

 614   3            g_duty[0]=30;
 615   3            step=0;
 616   3            break;
 617   3          }
 618   2        }
 619   1      }
 620          /******************************
 621          *名称:power_ok_mode
 622          *功能:上电ok,red9常亮
 623          *输入:无
 624          *输出:无
 625          *修改记录:
 626          ******************************/
 627          void power_ok_mode(void)
 628          {
 629   1        uchar i;
 630   1      
 631   1        if(!power_ok_init)
 632   1        {
 633   2          power_ok_init=1;
 634   2          for(i=0;i<17;i++)
 635   2          {
 636   3            r_duty[i]=0;
 637   3            g_duty[i]=0;
 638   3            b_duty[i]=0;
 639   3          }
 640   2        
 641   2          g_duty[8]=30;
 642   2          power_on_flag=0;
 643   2            power_err_flag=0;
 644   2        }
 645   1      }
 646          
 647          /*****************************
 648          *名称:conditionst
 649          *功能:red:led8--led1  led10--led17
 650          *输入:无
 651          *输出:无
 652          *修改记录:
 653          ******************************/
 654          void conditionst_mode(void)
 655          {
 656   1        uchar i;
 657   1      
 658   1        if(!conditionst_init)
 659   1        {
 660   2          conditionst_init=1;
 661   2        step=0;
 662   2        led_step=0;
 663   2          for(i=0;i<17;i++)
 664   2        {
 665   3           r_duty[i]=0;
 666   3           g_duty[i]=0;
 667   3           b_duty[i]=0;
 668   3        }
 669   2      
 670   2        led_step=0;
 671   2        conditionst_delay_1=0x00;
 672   2          conditionst_delay_2=0x00;
 673   2          step=0x00;
 674   2        }
 675   1        
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 12  

 676   1        conditionst_delay_1+=1;
 677   1        if(conditionst_delay_1>20)
 678   1        {
 679   2          conditionst_delay_1=0x00;
 680   2          
 681   2        switch(step)
 682   2        {
 683   3          case 0:
 684   3          r_duty[0]=30;
 685   3              step++;
 686   3              break;  
 687   3            
 688   3            case 1: 
 689   3            for(i=0;i<17;i++)
 690   3              duty_buff[i]=r_duty[i];      //r
 691   3            horse_led();
 692   3            for(i=0;i<17;i++)
 693   3              r_duty[i]=duty_buff[i];
 694   3            break;
 695   3      
 696   3            case 2:
 697   3            r_duty[16]=30;
 698   3            step+=1;
 699   3            break;
 700   3      
 701   3            case 3:
 702   3            for(i=0;i<17;i++)
 703   3              duty_buff[i]=r_duty[16-i];  //r
 704   3            horse_led();
 705   3            for(i=0;i<17;i++)
 706   3              r_duty[16-i]=duty_buff[i];
 707   3            break;
 708   3      
 709   3            case 4:
 710   3                  step=0;
 711   3              //------DS.Chin--------------------------------------------------------
 712   3                  if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
 713   3                else if(alarm_trigger_flag) {mode_step=4;alarm_trigger_init=0;}    
 714   3              //---------------------------------------------------------------------
 715   3              break;
 716   3      
 717   3            default:
 718   3            step=0;
 719   3            break;    
 720   3          }
 721   2        }
 722   1      }
 723          
 724          /****************************
 725          *名称:led_chase
 726          *功能: 
 727          *输入:无
 728          *输出:无
 729          *修改记录:
 730          *****************************/
 731          void led_chase(void)
 732          {
 733   1          if (led_step == 0)
 734   1          {
 735   2              duty_buff[8] -= 1;
 736   2              if(duty_buff[8] < 25)
 737   2              {
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 13  

 738   3                  duty_buff[7] = 30;
 739   3                  duty_buff[9] = 30;
 740   3                  led_step++;
 741   3              }
 742   2          }
 743   1        if(led_step==1)
 744   1        {
 745   2            duty_buff[8] -= 1;
 746   2          duty_buff[7]-=1;
 747   2          duty_buff[9]-=1;
 748   2          if(duty_buff[7]<25)
 749   2          {
 750   3            duty_buff[6]=30;
 751   3            duty_buff[10]=30;
 752   3            led_step+=1;
 753   3          }
 754   2        }
 755   1      
 756   1        if(led_step==2)
 757   1        {
 758   2            duty_buff[8] -= 1;
 759   2          duty_buff[7]-=1;
 760   2          duty_buff[9]-=1;
 761   2          duty_buff[6]-=1;
 762   2          duty_buff[10]-=1;
 763   2          if(duty_buff[6]<25)
 764   2          {
 765   3            duty_buff[5]=30;
 766   3            duty_buff[11]=30;
 767   3            led_step+=1;
 768   3          }
 769   2        }
 770   1      
 771   1        if(led_step==3)
 772   1        {
 773   2            duty_buff[8] -= 1;
 774   2          duty_buff[7]-=1;
 775   2          duty_buff[9]-=1;
 776   2          duty_buff[6]-=1;
 777   2          duty_buff[10]-=1;
 778   2          duty_buff[5]-=1;
 779   2          duty_buff[11]-=1;
 780   2          if(duty_buff[5]<25)
 781   2          {
 782   3            duty_buff[4]=30;
 783   3            duty_buff[12]=30;
 784   3            led_step+=1;
 785   3          }
 786   2        }
 787   1      
 788   1        if(led_step==4)
 789   1        {
 790   2            duty_buff[8] -= 1;
 791   2          duty_buff[7]-=1;
 792   2          duty_buff[9]-=1;
 793   2          duty_buff[6]-=1;
 794   2          duty_buff[10]-=1;
 795   2          duty_buff[5]-=1;
 796   2          duty_buff[11]-=1;
 797   2          duty_buff[4]-=1;
 798   2          duty_buff[12]-=1;
 799   2          if(duty_buff[4]<25)
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 14  

 800   2          {
 801   3            duty_buff[3]=30;
 802   3            duty_buff[13]=30;
 803   3            led_step+=1;
 804   3          }
 805   2        }
 806   1      
 807   1        if(led_step==5)
 808   1        {
 809   2          duty_buff[7]-=1;
 810   2          duty_buff[9]-=1;
 811   2          duty_buff[6]-=1;
 812   2          duty_buff[10]-=1;
 813   2          duty_buff[5]-=1;
 814   2          duty_buff[11]-=1;
 815   2          duty_buff[4]-=1;
 816   2          duty_buff[12]-=1;
 817   2          duty_buff[3]-=1;
 818   2          duty_buff[13]-=1;
 819   2          if(duty_buff[3]<25)
 820   2          {
 821   3            duty_buff[2]=30;
 822   3            duty_buff[14]=30;
 823   3            led_step+=1;
 824   3          }
 825   2        }
 826   1      
 827   1        if(led_step==6)
 828   1        {
 829   2          duty_buff[6]-=1;
 830   2          duty_buff[10]-=1;
 831   2          duty_buff[5]-=1;
 832   2          duty_buff[11]-=1;
 833   2          duty_buff[4]-=1;
 834   2          duty_buff[12]-=1;
 835   2          duty_buff[3]-=1;
 836   2          duty_buff[13]-=1;
 837   2          duty_buff[2]-=1;
 838   2          duty_buff[14]-=1;
 839   2          if(duty_buff[2]<25)
 840   2          {
 841   3            duty_buff[1]=30;
 842   3            duty_buff[15]=30;
 843   3            led_step+=1;
 844   3          }
 845   2        }
 846   1      
 847   1        if(led_step==7)
 848   1        {
 849   2           
 850   2          duty_buff[5]-=1;
 851   2          duty_buff[11]-=1;
 852   2          duty_buff[4]-=1;
 853   2          duty_buff[12]-=1;
 854   2          duty_buff[3]-=1;
 855   2          duty_buff[13]-=1;
 856   2          duty_buff[2]-=1;
 857   2          duty_buff[14]-=1;
 858   2          duty_buff[1]-=1;
 859   2          duty_buff[15]-=1;
 860   2          if(duty_buff[1]<25)
 861   2          {
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 15  

 862   3            duty_buff[0]=30;
 863   3            duty_buff[16]=30;
 864   3            led_step+=1;
 865   3          }
 866   2        }
 867   1      
 868   1        if(led_step==8)
 869   1        {
 870   2            
 871   2          duty_buff[4]-=1;
 872   2          duty_buff[12]-=1;
 873   2          duty_buff[3]-=1;
 874   2          duty_buff[13]-=1;
 875   2          duty_buff[2]-=1;
 876   2          duty_buff[14]-=1;
 877   2          duty_buff[1]-=1;
 878   2          duty_buff[15]-=1;
 879   2          duty_buff[0]-=1;
 880   2          duty_buff[16]-=1;
 881   2          if(duty_buff[0]<25)
 882   2          {
 883   3            led_step+=1;
 884   3          }
 885   2        }
 886   1      
 887   1        if(led_step==9)
 888   1        {
 889   2          duty_buff[3]-=1;
 890   2          duty_buff[13]-=1;
 891   2          duty_buff[2]-=1;
 892   2          duty_buff[14]-=1;
 893   2          duty_buff[1]-=1;
 894   2          duty_buff[15]-=1;
 895   2          duty_buff[0]-=1;
 896   2          duty_buff[16]-=1;
 897   2          if(duty_buff[3]<1)
 898   2          {
 899   3            led_step+=1;
 900   3          }
 901   2        }
 902   1      
 903   1        if(led_step==10)
 904   1        {
 905   2          duty_buff[2]-=1;
 906   2          duty_buff[14]-=1;
 907   2          duty_buff[1]-=1;
 908   2          duty_buff[15]-=1;
 909   2          duty_buff[0]-=1;
 910   2          duty_buff[16]-=1;
 911   2          if(duty_buff[2]<1)
 912   2          {
 913   3            led_step+=1;
 914   3          }
 915   2        }
 916   1      
 917   1        if(led_step==11)
 918   1        {
 919   2          duty_buff[1]-=1;
 920   2          duty_buff[15]-=1;
 921   2          duty_buff[0]-=1;
 922   2          duty_buff[16]-=1;
 923   2          if(duty_buff[1]<1)
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 16  

 924   2          {
 925   3            led_step+=1;
 926   3          }
 927   2        }
 928   1      
 929   1        if(led_step==12)
 930   1        {
 931   2          duty_buff[0]-=1;
 932   2          duty_buff[16]-=1;
 933   2          if(duty_buff[0]<1)
 934   2          {
 935   3            led_step=0;
 936   3            step+=1;
 937   3          }
 938   2        }
 939   1      } 
 940          /****************************
 941          *名称:conditionsn_mode
 942          *功能:red LED1--LED17 OFF 
 943          *输入:无
 944          *输出:无
 945          *修改记录:
 946          *****************************/
 947          void conditionsn_mode(void)
 948          {
 949   1        uchar i;
 950   1        if(!conditionsn_init)
 951   1        {
 952   2          conditionsn_init=1;
 953   2          for(i=0;i<17;i++)
 954   2            r_duty[i]=0;
 955   2      
 956   2              
 957   2          conditionst_flag=0;
 958   2          conditionsn_flag=0;
 959   2        }
 960   1        
 961   1          //------DS.Chin--------------------------------------------------------
 962   1                  if(alarm_trigger_flag) {mode_step=4;alarm_trigger_init=0;}
 963   1                  else if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
 964   1                  else    g_duty[8]=30;
 965   1          //---------------------------------------------------------------------
 966   1       
 967   1      /*DS.Chin  if(alarm_normal_flag) {mode_step=3;alarm_normal_init=0;}
 968   1        else if(alarm_trigger_flag) {mode_step=4;alarm_trigger_init=0;}
 969   1        else if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
 970   1        else if(sensor_normal_flag) {mode_step=6;sensor_normal_init=0;}
 971   1        else if(control_flag) {mode_step=7;control_init=0;}
 972   1        else if(conditionst_flag) {mode_step=1;conditionst_init=0;}
 973   1        else mode_step=0;*/
 974   1        //else if(wlan_ok_flag) {mode_step=1;wlan_ok_init=0;}
 975   1      }
 976          
 977          /*****************************
 978          *名称:sensor_trigger_mode
 979          *功能:BLUE LED1--LED17 同时0.5S ON/OFF
 980          *输入:无
 981          *输出:无
 982          *修改记录:
 983          ******************************/
 984          void sensor_trigger_mode(void)
 985          {
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 17  

 986   1        uchar i;
 987   1      
 988   1        if(!sensor_trigger_init)
 989   1        {
 990   2          sensor_trigger_init=1;
 991   2        
 992   2          for(i=0;i<17;i++)
 993   2          {
 994   3            r_duty[i]=0;
 995   3            g_duty[i]=0;
 996   3            b_duty[i]=0;
 997   3          }
 998   2          //g_duty[8]=30;
 999   2      
1000   2            //r_duty[7]=30;
1001   2          r_duty[8]=30;
1002   2          //r_duty[9]=30;
1003   2         
1004   2          sensor_trigger_delay_1=0x00;
1005   2          sensor_trigger_delay_2=0x00;
1006   2          led_step=0;
1007   2          step=0x00;
1008   2        }
1009   1      
1010   1        sensor_trigger_delay_1+=1;
1011   1        if(sensor_trigger_delay_1>20)
1012   1        {
1013   2          sensor_trigger_delay_1=0x00;
1014   2          sensor_trigger_delay_2+=1;
1015   2          if(sensor_trigger_delay_2>0)
1016   2          {
1017   3            sensor_trigger_delay_2=0x00;
1018   3            switch(step)
1019   3            {
1020   4              case 0:  
1021   4                  for(i=0;i<17;i++)
1022   4                      duty_buff[i]=r_duty[i];
1023   4              led_chase();
1024   4              for(i=0;i<17;i++)
1025   4              r_duty[i]=duty_buff[i];
1026   4              break;
1027   4              
1028   4              case 1:
1029   4                  //    r_duty[7]=30;
1030   4                  
1031   4                 // r_duty[9]=30;
1032   4              step=0;
1033   4      //------DS.Chin---------------------------------------------------------------
1034   4                  if(alarm_trigger_flag) 
1035   4                  {
1036   5                      mode_step=4;
1037   5                      alarm_trigger_init=0;
1038   5                  }
1039   4                  else if(conditionst_flag) 
1040   4                  {
1041   5                      mode_step=1;
1042   5                      conditionst_init=0;
1043   5                  }
1044   4                  else
1045   4                      r_duty[8]=30;
1046   4      //-----------------------------------------------------------------------------
1047   4      /* DS.Chin        if(sensor_normal_flag) {mode_step=6;sensor_normal_init=0;}
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 18  

1048   4              else if(control_flag) {mode_step=7;control_init=0;}
1049   4              else if(conditionst_flag) {mode_step=1;conditionst_init=0;}
1050   4              else if(conditionsn_flag) {mode_step=2;conditionsn_init=0;}
1051   4              else if(alarm_normal_flag) {mode_step=3;alarm_normal_init=0;}
1052   4              else if(alarm_trigger_flag) {mode_step=4;alarm_trigger_init=0;}
1053   4              else mode_step=0;*/
1054   4               //else if(sensor_trigger_flag) {mode_step=4;sensor_trigger_init=0;}
1055   4            break;
1056   4          default:
1057   4            step=0x00;
1058   4            break;
1059   4            }
1060   3          }
1061   2        }
1062   1      }
1063          
1064          
1065          /****************************
1066          *名称:sensor_normal_mode
1067          *功能:BLUE LED1--LED17 OFF 
1068          *输入:无
1069          *输出:无
1070          *修改记录:
1071          *****************************/
1072          void sensor_normal_mode(void)
1073          {
1074   1        uchar i;
1075   1        if(!sensor_normal_init)
1076   1        {
1077   2          sensor_normal_init=1;
1078   2          for(i=0;i<17;i++)
1079   2            r_duty[i] = 0; //DS.Chin
1080   2          //  b_duty[i]=0; //DS.Chin
1081   2          
1082   2          sensor_trigger_flag=0;
1083   2          sensor_normal_flag=0;
1084   2        }
1085   1          
1086   1       //------DS.Chin---------------------------------------------------------------
1087   1                  if(alarm_trigger_flag) 
1088   1                  {
1089   2                      mode_step=4;
1090   2                      alarm_trigger_init=0;
1091   2                  }
1092   1                  else if(conditionst_flag) 
1093   1                  {
1094   2                      mode_step=1;
1095   2                      conditionst_init=0;
1096   2                  }
1097   1                  else
1098   1                      g_duty[8]=30;
1099   1      //----------------------------------------------------------------------------- 
1100   1                  
1101   1      /* DS.Chin  if(control_flag) {mode_step=7;control_init=0;}
1102   1        else if(conditionst_flag) {mode_step=1;conditionst_init=0;}
1103   1        else if(conditionsn_flag) {mode_step=2;conditionsn_init=0;}
1104   1        else if(alarm_normal_flag) {mode_step=3;alarm_normal_init=0;}
1105   1        else if(alarm_trigger_flag) {mode_step=4;alarm_trigger_init=0;}
1106   1        else if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
1107   1        else mode_step=0;*/
1108   1      }
1109          /*****************************
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 19  

1110          *名称:control_mode();
1111          *功能:RED LED8--LED1,LED10--LED17 跑马灯一次
1112          *输入:无
1113          *输出:无
1114          *修改记录:
1115          *****************************/
1116          void control_mode(void)
1117          {
1118   1        uchar i;
1119   1        if(!control_init)
1120   1        {
1121   2          control_init=1;
1122   2      
1123   2          for(i=0;i<17;i++)
1124   2          {
1125   3            r_duty[i]=0;
1126   3            g_duty[i]=0;
1127   3            b_duty[i]=0;
1128   3          }
1129   2         // g_duty[8]=30;
1130   2      
1131   2          //g_duty[7]=30;
1132   2          //g_duty[9]=30;
1133   2          //b_duty[7]=30;
1134   2          b_duty[8]=30;
1135   2      
1136   2          control_delay_1=0x00;
1137   2          control_delay_2=0x00;
1138   2          led_step=0;
1139   2          step=0;
1140   2        }
1141   1        control_delay_1+=1;
1142   1        if(control_delay_1>20)
1143   1        {
1144   2          control_delay_1=0x00;
1145   2        //control_delay_2+=1;
1146   2        //if(control_delay_2>50)
1147   2        //{
1148   2          control_delay_2=0x00;
1149   2          switch(step)
1150   2          {
1151   3            case 0:  
1152   3            for(i=0;i<17;i++)
1153   3             duty_buff[i]=b_duty[i];
1154   3            led_chase();
1155   3            for(i=0;i<17;i++)
1156   3            {
1157   4              //g_duty[i]=duty_buff[i];
1158   4              b_duty[i]=duty_buff[i];
1159   4              //b_duty[8]=0;
1160   4            }
1161   3            break;
1162   3            
1163   3            case 1:
1164   3            control_flag=0;
1165   3       //--------------DS.Chin---------------------------------------------
1166   3                  if(conditionst_flag) {mode_step=1;conditionst_init=0;}
1167   3                  else if(alarm_trigger_flag) {mode_step=4;alarm_trigger_init=0;}
1168   3                  else if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
1169   3                  else    g_duty[8] =30;
1170   3            break;
1171   3            
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 20  

1172   3            default:
1173   3            step=0x00;
1174   3            break;
1175   3         }
1176   2        }
1177   1      }
1178          
1179          /*****************************
1180          *名称:alarm_trigger_mode();
1181          *功能:RED LED1--LED17--LED1 跑马灯
1182          *输入:无
1183          *输出:无
1184          *修改记录: DS.Chin 2015-5-5
1185          *****************************/
1186          void alarm_trigger_mode(void)
1187          {
1188   1        uchar i;
1189   1        static uchar timeCnt1 = 0;
1190   1        static uchar timeCnt2 = 0;
1191   1        static uchar timeCnt3 = 0;
1192   1        static bit flagFlash = 0;
1193   1        if(!alarm_trigger_init)
1194   1        {
1195   2          alarm_trigger_init=1;
1196   2            timeCnt1  = 0;
1197   2            timeCnt2  = 0;
1198   2            timeCnt3  = 0;
1199   2            flagFlash = 0;
1200   2            
1201   2          for(i=0;i<17;i++)
1202   2          {
1203   3            r_duty[i]=0;
1204   3            g_duty[i]=0;
1205   3            b_duty[i]=0;
1206   3          }
1207   2         // g_duty[8]=30;
1208   2        }
1209   1      //-------DS.Chin -----------------------------------------------
1210   1            timeCnt1++;
1211   1            if (timeCnt1 > 40)
1212   1            {
1213   2                timeCnt1 = 0;
1214   2                timeCnt2++;
1215   2              
1216   2                flagFlash ^= 1;
1217   2                if (timeCnt2 < 9)
1218   2                {
1219   3                    for (i = 0; i < 17 ; i++)
1220   3                    {
1221   4                        if (flagFlash)
1222   4                            r_duty[i] = 30;
1223   4                        else
1224   4                            r_duty[i] = 0;
1225   4                        
1226   4                    } 
1227   3                }
1228   2                else if (timeCnt2 > 20)
1229   2                {
1230   3                    timeCnt3++;
1231   3                    timeCnt2 = 0;  
1232   3                    flagFlash = 0;
1233   3      
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 21  

1234   3                    if (timeCnt3 > 1)
1235   3                    {
1236   4                        timeCnt3 = 0;
1237   4                       if(conditionst_flag) {mode_step=1;conditionst_init=0;}
1238   4                       else if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
1239   4                    }
1240   3                }
1241   2                      
1242   2             }
1243   1        
1244   1      //---------------------------------------------------------------
1245   1        /*  r_duty[7]=30;
1246   1          r_duty[9]=30;
1247   1          led_step=0;
1248   1          step=0;
1249   1          alarm_trigger_delay_1=0x00;
1250   1          alarm_trigger_delay_2=0x00;
1251   1      
1252   1        }
1253   1      
1254   1        alarm_trigger_delay_1+=1;
1255   1        if(alarm_trigger_delay_1>20)
1256   1        {
1257   1          alarm_trigger_delay_1=0;
1258   1          switch(step)
1259   1          {
1260   1            case 0:  
1261   1            for(i=0;i<17;i++)
1262   1            duty_buff[i]=r_duty[i];
1263   1            led_chase();
1264   1            for(i=0;i<17;i++)
1265   1              r_duty[i]=duty_buff[i];
1266   1            break;
1267   1            
1268   1            case 1:
1269   1            r_duty[7]=30;
1270   1            r_duty[9]=30;
1271   1            step=0;--*/
1272   1      
1273   1            /*--DS.Chin if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
1274   1            else if(sensor_normal_flag) {mode_step=6;sensor_normal_init=0;}
1275   1            else if(control_flag) {mode_step=7;control_init=0;}
1276   1            else if(conditionst_flag) {mode_step=1;conditionst_init=0;}
1277   1            else if(conditionsn_flag) {mode_step=2;conditionsn_init=0;}
1278   1            else if(alarm_normal_flag) {mode_step=3;alarm_normal_init=0;}
1279   1            else mode_step=0;--*/
1280   1        /* --   break;
1281   1            
1282   1            default:
1283   1            step=0x00;
1284   1            break;
1285   1          }
1286   1        }--*/
1287   1      }
1288          
1289          /*****************************
1290          *名称:alarm_trigger_mode();
1291          *功能:RED LED1--LED17--LED1 跑马灯
1292          *输入:无
1293          *输出:无
1294          *修改记录:
1295          *****************************/
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 22  

1296          void alarm_normal_mode(void)
1297          {
1298   1        uchar i;
1299   1        if(!alarm_normal_init)
1300   1        {
1301   2          alarm_normal_init=1;
1302   2          for(i=0;i<17;i++)
1303   2          r_duty[i]=0;
1304   2          alarm_trigger_flag=0;
1305   2          alarm_normal_flag=0;
1306   2        }
1307   1        
1308   1      //------------DS.Chin--------------------------------------------------  
1309   1          if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
1310   1          else if(conditionst_flag) {mode_step=1;conditionst_init=0;}
1311   1          else     g_duty[8]=30;
1312   1      //--------------------------------------------------------------------                 
1313   1        /* DS.Chin if(alarm_trigger_flag) {mode_step=4;alarm_trigger_init=0;}
1314   1        else if(sensor_trigger_flag) {mode_step=5;sensor_trigger_init=0;}
1315   1        else if(sensor_normal_flag) {mode_step=6;sensor_normal_init=0;}
1316   1        else if(control_flag) {mode_step=7;control_init=0;}
1317   1        else if(conditionst_flag) {mode_step=1;conditionst_init=0;}
1318   1        else if(conditionsn_flag) {mode_step=2;conditionsn_init=0;}
1319   1        else mode_step=0;*/
1320   1        //else if(alarm_normal_flag) {mode_step=2;alarm_normal_init=0;}
1321   1      }
1322          
1323          /*****************************************
1324           * FunctionName: RemoveMode
1325           * Date: 2015.10.13
1326           * Author:DS.Chin
1327           * Describe: remove模式，中间绿灯常亮，红灯慢闪
1328          *******************************************************/
1329          void RemoveMode(void) 
1330          {
1331   1        uchar iCnt = 0;
1332   1        static unsigned int rmvCnt;
1333   1        static bit flashFlag;
1334   1        
1335   1        if (!removeInit)
1336   1        {
1337   2          removeInit = 1;
1338   2          rmvCnt = 0;
1339   2          flashFlag = 0;
1340   2          
1341   2          for (iCnt = 0; iCnt < 17; iCnt++)
1342   2          {
1343   3            r_duty[iCnt] = 0;
1344   3            g_duty[iCnt] = 0;
1345   3            b_duty[iCnt] = 0;
1346   3          }
1347   2        }
1348   1        else
1349   1        {
1350   2          rmvCnt++;
1351   2          if (rmvCnt > 500)
1352   2          {
1353   3            rmvCnt = 0;
1354   3            
1355   3            flashFlag = ~flashFlag;
1356   3            if (flashFlag)
1357   3            {
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 23  

1358   4              r_duty[8] = 30;
1359   4            }
1360   3            else
1361   3            {
1362   4              r_duty[8] = 0;
1363   4            }
1364   3          }
1365   2        }
1366   1      }
1367          
1368          /*****************************************
1369           * FunctionName: RemoveOkMode
1370           * Date: 2015.10.13
1371           * Author:DS.Chin
1372           * Describe: remove模式，中间绿灯常亮，红灯慢闪
1373          *******************************************************/
1374          void RemoveOkMode(void)
1375          {
1376   1        uchar       iCnt = 0;
1377   1        static uchar    rmvOkCnt;
1378   1        static bit      flashFlag;
1379   1        static uchar    flashCnt;
1380   1        static uchar    modeStep;
1381   1        
1382   1        if (!removeOkInit)
1383   1        {
1384   2          removeOkInit = 1;
1385   2          rmvOkCnt     = 0;
1386   2          flashFlag    = 0;
1387   2          flashCnt     = 0;
1388   2          modeStep     = 0;
1389   2          
1390   2          for (iCnt = 0; iCnt < 17; iCnt++)
1391   2          {
1392   3            r_duty[iCnt] = 0;
1393   3            g_duty[iCnt] = 0;
1394   3            b_duty[iCnt] = 0;
1395   3          }
1396   2        }
1397   1        else
1398   1        {
1399   2          rmvOkCnt++;
1400   2          if (rmvOkCnt > 180)
1401   2          {
1402   3            rmvOkCnt = 0;
1403   3            
1404   3            switch (modeStep)
1405   3            {
1406   4              case 0:
1407   4                flashFlag = ~flashFlag;
1408   4                if (!flashFlag)
1409   4                {
1410   5                  r_duty[8] = 30;
1411   5                  flashCnt++;
1412   5                  if (flashCnt > 2)
1413   5                  {
1414   6                    flashCnt = 0;
1415   6                    modeStep++;
1416   6                  }
1417   5                }
1418   4                else
1419   4                {
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 24  

1420   5                  r_duty[8] = 0;
1421   5                }
1422   4                break;
1423   4              case 1:
1424   4                flashCnt++;
1425   4                if (flashCnt > 3)
1426   4                {
1427   5                  modeStep ++;
1428   5                  flashCnt = 0;
1429   5                  r_duty[8] = 0;
1430   5                }
1431   4                break;
1432   4              case 2:
1433   4                if(conditionst_flag)
1434   4                {
1435   5                  mode_step = 1;
1436   5                  conditionst_init = 0;
1437   5                }
1438   4                else if(alarm_trigger_flag) 
1439   4                {
1440   5                  mode_step = 4;
1441   5                  alarm_trigger_init = 0;
1442   5                }
1443   4                else if(sensor_trigger_flag) 
1444   4                {
1445   5                  mode_step = 5;
1446   5                  sensor_trigger_init = 0;
1447   5                }
1448   4                else    
1449   4                {
1450   5                  g_duty[8] =30;
1451   5                }
1452   4                break;
1453   4            }
1454   3          }
1455   2        }
1456   1      }
1457          
1458          /*****************************************
1459           * FunctionName: RemoveMode
1460           * Date: 2015.10.13
1461           * Author:DS.Chin
1462           * Describe: remove模式，中间绿灯常亮，红灯慢闪
1463          *******************************************************/
1464          void AddMode(void) 
1465          {
1466   1        uchar iCnt = 0;
1467   1        static unsigned int addCnt;
1468   1        static bit flashFlag;
1469   1        
1470   1        if (!addInit)
1471   1        {
1472   2          addInit = 1;
1473   2          addCnt = 0;
1474   2          flashFlag = 0;
1475   2          
1476   2          for (iCnt = 0; iCnt < 17; iCnt++)
1477   2          {
1478   3            r_duty[iCnt] = 0;
1479   3            g_duty[iCnt] = 0;
1480   3            b_duty[iCnt] = 0;
1481   3          }
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 25  

1482   2        }
1483   1        else
1484   1        {
1485   2          addCnt++;
1486   2          if (addCnt > 500)
1487   2          {
1488   3            addCnt = 0;
1489   3            
1490   3            flashFlag = ~flashFlag;
1491   3            if (flashFlag)
1492   3            {
1493   4              b_duty[8] = 30;
1494   4            }
1495   3            else
1496   3            {
1497   4              b_duty[8] = 0;
1498   4            }
1499   3          }
1500   2        }
1501   1      }
1502          
1503          /*****************************************
1504           * FunctionName: AddOkMode
1505           * Date: 2015.10.13
1506           * Author:DS.Chin
1507           * Describe: remove模式，中间绿灯常亮，红灯慢闪
1508          *******************************************************/
1509          void AddOkMode(void)
1510          {
1511   1        uchar       iCnt = 0;
1512   1        static uchar    addOkCnt;
1513   1        static bit      flashFlag;
1514   1        static uchar    flashCnt;
1515   1        static uchar    modeStep;
1516   1        
1517   1        if (!addOkInit)
1518   1        {
1519   2          addOkInit = 1;
1520   2          addOkCnt     = 0;
1521   2          flashFlag    = 0;
1522   2          flashCnt     = 0;
1523   2          modeStep     = 0;
1524   2          
1525   2          for (iCnt = 0; iCnt < 17; iCnt++)
1526   2          {
1527   3            r_duty[iCnt] = 0;
1528   3            g_duty[iCnt] = 0;
1529   3            b_duty[iCnt] = 0;
1530   3          }
1531   2        }
1532   1        else
1533   1        {
1534   2          addOkCnt++;
1535   2          if (addOkCnt > 180)
1536   2          {
1537   3            addOkCnt = 0;
1538   3            
1539   3            switch (modeStep)
1540   3            {
1541   4              case 0:
1542   4                flashFlag = ~flashFlag;
1543   4                if (!flashFlag)
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 26  

1544   4                {
1545   5                  b_duty[8] = 30;
1546   5                  flashCnt++;
1547   5                  if (flashCnt > 2)
1548   5                  {
1549   6                    flashCnt = 0;
1550   6                    modeStep++;
1551   6                  }
1552   5                }
1553   4                else
1554   4                {
1555   5                  b_duty[8] = 0;
1556   5                }
1557   4                break;
1558   4              case 1:
1559   4                flashCnt++;
1560   4                if (flashCnt > 3)
1561   4                {
1562   5                  modeStep ++;
1563   5                  flashCnt = 0;
1564   5                  b_duty[8] = 0;
1565   5                }
1566   4                break;
1567   4              case 2:
1568   4                if(conditionst_flag)
1569   4                {
1570   5                  mode_step = 1;
1571   5                  conditionst_init = 0;
1572   5                }
1573   4                else if(alarm_trigger_flag) 
1574   4                {
1575   5                  mode_step = 4;
1576   5                  alarm_trigger_init = 0;
1577   5                }
1578   4                else if(sensor_trigger_flag) 
1579   4                {
1580   5                  mode_step = 5;
1581   5                  sensor_trigger_init = 0;
1582   5                }
1583   4                else    
1584   4                {
1585   5                  g_duty[8] =30;
1586   5                }
1587   4                break;
1588   4            }
1589   3          }
1590   2        }
1591   1      }
1592          
1593          /*****************************************
1594           * FunctionName: RmvAddErrMode
1595           * Date: 2015.10.13
1596           * Author:DS.Chin
1597           * Describe: remove模式，中间绿灯常亮，红灯慢闪
1598          *******************************************************/
1599          void RmvAddErrMode(void)
1600          {
1601   1        uchar       iCnt = 0;
1602   1        static uchar    rmvAddErrCnt;
1603   1        static bit      flashFlag;
1604   1        static uchar    flashCnt;
1605   1        static uchar    modeStep;
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 27  

1606   1        
1607   1        if (!rmvAddErrInit)
1608   1        {
1609   2          rmvAddErrInit = 1;
1610   2          rmvAddErrCnt  = 0;
1611   2          flashFlag     = 0;
1612   2          flashCnt      = 0;
1613   2          modeStep      = 0;
1614   2          
1615   2          for (iCnt = 0; iCnt < 17; iCnt++)
1616   2          {
1617   3            r_duty[iCnt] = 0;
1618   3            g_duty[iCnt] = 0;
1619   3            b_duty[iCnt] = 0;
1620   3          }
1621   2        }
1622   1        else
1623   1        {
1624   2          rmvAddErrCnt++;
1625   2          if (rmvAddErrCnt > 100)
1626   2          {
1627   3            rmvAddErrCnt = 0;
1628   3            
1629   3            switch (modeStep)
1630   3            {
1631   4              case 0:
1632   4                flashFlag = ~flashFlag;
1633   4                if (!flashFlag)
1634   4                {
1635   5                  r_duty[8] = 30;
1636   5                  b_duty[8] = 0;
1637   5                  flashCnt++;
1638   5                  if (flashCnt > 10)
1639   5                  {
1640   6                    flashCnt = 0;
1641   6                    modeStep++;
1642   6                  }
1643   5                }
1644   4                else
1645   4                {
1646   5                  r_duty[8] = 0;
1647   5                  b_duty[8] = 30;
1648   5                }
1649   4                break;
1650   4              case 1:
1651   4                flashCnt++;
1652   4                if (flashCnt > 1)
1653   4                {
1654   5                  modeStep ++;
1655   5                  flashCnt = 0;
1656   5                  r_duty[8] = 0;
1657   5                  g_duty[8] = 30;
1658   5                  b_duty[8] = 0;
1659   5                }
1660   4                break;
1661   4              case 2:
1662   4                if(conditionst_flag)
1663   4                {
1664   5                  mode_step = 1;
1665   5                  conditionst_init = 0;
1666   5                }
1667   4                else if(alarm_trigger_flag) 
C51 COMPILER V9.52.0.0   MODE                                                              03/30/2017 14:18:05 PAGE 28  

1668   4                {
1669   5                  mode_step = 4;
1670   5                  alarm_trigger_init = 0;
1671   5                }
1672   4                else if(sensor_trigger_flag) 
1673   4                {
1674   5                  mode_step = 5;
1675   5                  sensor_trigger_init = 0;
1676   5                }
1677   4                else    
1678   4                {
1679   5                  g_duty[8] =30;
1680   5                }
1681   4                break;
1682   4            }
1683   3          }
1684   2        }
1685   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3254    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30    ----
   IDATA SIZE       =     17    ----
   BIT SIZE         =     23    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
