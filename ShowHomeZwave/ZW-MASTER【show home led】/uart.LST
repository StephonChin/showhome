C51 COMPILER V9.52.0.0   UART                                                              03/30/2017 14:18:05 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: C:\Keil51\C51\BIN\C51.EXE uart.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*****************************
   2          *作者:chenyk
   3          *日期:2014.10.31
   4          ******************************/
   5          #include "mc96f6508a.h"
   6          #include "uart.h"
   7          
   8          bit power_ok_init;
   9          bit power_err_init;
  10          bit power_on_init;
  11          bit conditionst_init;
  12          bit conditionsn_init;
  13          bit sensor_trigger_init;
  14          bit sensor_normal_init;
  15          bit control_init;
  16          bit alarm_normal_init;
  17          bit alarm_trigger_init;
  18          
  19          //----------------------------
  20          // @Modify DS.Chin 2015.10.13
  21          bit removeInit;
  22          bit removeOkInit;
  23          bit addInit;
  24          bit addOkInit;
  25          bit rmvAddErrInit;
  26          //------------------------------
  27          
  28          uchar *tx_buf;
  29          
  30          void uart_send(void);
  31          //uchar code power_ok[8]={80,79,87,69,82,32,79,75};
  32          //uchar code wlan_ng[7]={87,76,65,78,32,78,71};
  33          //uchar code wlan_ok[7]={87,76,65,78,32,79,75};
  34          //uchar code sensor_trigger[14]={83,69,78,83,79,82,32,84,82,73,71,71,69,82};
  35          //uchar code sensor_normal[14]={83,69,78,83,79,82,32,32,78,79,82,77,65,76};
  36          //uchar code control[7]={67,79,78,84,82,79,76};
  37          //uchar code alarm_normal[13]={65,76,65,82,77,32,32,78,79,82,77,65,76};
  38          //uchar code alarm_trigger[13]={65,76,65,82,77,32,84,82,73,71,71,69,82};
  39          //void receive_init(void);
  40          //void receive_power(void);
  41          //void receive_power(void);
  42          //void receive_wlan(void);
  43          //void receive_sensor(void);
  44          //void receive_control(void);
  45          //void receive_alarm(void);
  46          /*****************************
  47          *名称:uart_receive
  48          *功能:处理接收到的uart数据
  49          *输入:
  50          *输出:
  51          *修改记录:
  52          ******************************/
  53          void uart_receive(void)
  54          {
  55   1        if(uart_updata==1)
C51 COMPILER V9.52.0.0   UART                                                              03/30/2017 14:18:05 PAGE 2   

  56   1        {
  57   2          uart_updata=0;
  58   2        mode_step = 0; 
  59   2          if(uart_data[1]=='p' && uart_data[3] == 'w' && uart_data[7] == 'k')/*$powerok#*/
  60   2          {
  61   3            uart_send();
  62   3            power_ok_flag=1;
  63   3            power_err_flag=0;
  64   3                  power_ok_init=0;
  65   3          }
  66   2          else if(uart_data[1]=='p' && uart_data[3] == 'w' && uart_data[7] == 'r')/*$powerer#*/
  67   2          {
  68   3            uart_send();
  69   3            power_err_flag=1;
  70   3            power_ok_flag=0;
  71   3            power_err_init=0;
  72   3          }
  73   2          else if(uart_data[1]=='s' && uart_data[3] == 'n' && uart_data[7] == 't')/*$sensort#*/
  74   2          {
  75   3            if(power_ok_flag)
  76   3            {
  77   4              uart_send();
  78   4              sensor_trigger_flag=1;
  79   4              sensor_normal_flag=0;
  80   4                    sensor_trigger_init=0;
  81   4            }
  82   3          }
  83   2          else if(uart_data[1]=='s' && uart_data[3] == 'n' && uart_data[7] == 'n')/*$sensorn#*/
  84   2          {
  85   3            if(power_ok_flag)
  86   3            {
  87   4              uart_send();
  88   4              sensor_trigger_flag=0;
  89   4              sensor_normal_flag=1;
  90   4              sensor_normal_init=0;
  91   4            }
  92   3          }
  93   2          else if(uart_data[1]=='a' && uart_data[3] == 'a' && uart_data[6] == 't')/*$alarmt#*/
  94   2          {
  95   3            if(power_ok_flag)
  96   3            {
  97   4              uart_send();
  98   4              alarm_trigger_flag=1;
  99   4              alarm_normal_flag=0;
 100   4              alarm_trigger_init=0;
 101   4            }
 102   3          }
 103   2          else if(uart_data[1]=='a' && uart_data[3] == 'a' && uart_data[6] == 'n')/*$alarmn#*/
 104   2          {
 105   3            if(power_ok_flag)
 106   3            {
 107   4              uart_send();
 108   4              alarm_trigger_flag=0;
 109   4              alarm_normal_flag=1;
 110   4              alarm_normal_init=0;
 111   4            }
 112   3          }
 113   2          else if(uart_data[1]=='c' && uart_data[3] == 'n' && uart_data[11] == 't')/*$conditionst#*/
 114   2          {
 115   3            if(power_ok_flag)
 116   3            {
 117   4              uart_send();
C51 COMPILER V9.52.0.0   UART                                                              03/30/2017 14:18:05 PAGE 3   

 118   4              conditionst_flag=1;
 119   4              conditionsn_flag=0;
 120   4              conditionst_init=0;
 121   4            }
 122   3          }
 123   2          else if(uart_data[1]=='c' && uart_data[3] == 'n' && uart_data[11] == 'n')/*$conditionsn#*/
 124   2          {
 125   3            if(power_ok_flag)
 126   3            {
 127   4              uart_send();
 128   4              conditionst_flag=0;
 129   4              conditionsn_flag=1;
 130   4              conditionsn_init=0;
 131   4            }
 132   3          }
 133   2          else if(uart_data[1]=='c' && uart_data[3] == 'n' && uart_data[10] == 'r')/*$controller#*/
 134   2          {
 135   3            if(power_ok_flag)
 136   3            {
 137   4              control_flag=1;
 138   4              control_init=0;
 139   4            }
 140   3          }
 141   2          //-----------DS.Chin 2015.10.13
 142   2          else if(uart_data[1] == 'r' && uart_data[3] == 'm' && uart_data[5] == 'v' && uart_data[7] == 0)
 143   2          {
 144   3            if (power_ok_flag)
 145   3            {
 146   4              removeFlag    = 1;
 147   4              addFlag       = 0;
 148   4              addOkFlag     = 0;
 149   4              rmvAddErrFlag = 0;
 150   4              removeOkFlag  = 0;
 151   4              removeInit    = 0;
 152   4            }
 153   3          }
 154   2          else if (uart_data[1] == 'r' && uart_data[3] == 'm' && uart_data[5] == 'v' && uart_data[7] == 'k')
 155   2          {
 156   3            if (power_ok_flag)
 157   3            {
 158   4              removeFlag    = 0;
 159   4              addFlag       = 0;
 160   4              addOkFlag     = 0;
 161   4              rmvAddErrFlag = 0;
 162   4              removeOkFlag  = 1;
 163   4              removeOkInit  = 0;
 164   4            }
 165   3          }
 166   2          else if (uart_data[1] == 't' && uart_data[3] == 'm' && uart_data[5] == 'o' && uart_data[7] == 't')
 167   2          {
 168   3            if (power_ok_flag)
 169   3            {
 170   4              removeFlag    = 0;
 171   4              addFlag       = 0;
 172   4              addOkFlag     = 0;
 173   4              rmvAddErrFlag = 1;
 174   4              removeOkFlag  = 0;
 175   4              rmvAddErrInit = 0;
 176   4            }
 177   3          }
 178   2          else if (uart_data[1] == 'a' && uart_data[3] == 'd' && uart_data[5] == 0)
 179   2          {
C51 COMPILER V9.52.0.0   UART                                                              03/30/2017 14:18:05 PAGE 4   

 180   3            if (power_ok_flag)
 181   3            {
 182   4              removeFlag    = 0;
 183   4              addFlag       = 1;
 184   4              addOkFlag     = 0;
 185   4              rmvAddErrFlag = 0;
 186   4              removeOkFlag  = 0;
 187   4              addInit       = 0;
 188   4            }
 189   3          }
 190   2          else if (uart_data[1] == 'a' && uart_data[3] == 'd' && uart_data[5] == 'k')
 191   2          {
 192   3            if (power_ok_flag)
 193   3            {
 194   4              removeFlag    = 0;
 195   4              addFlag       = 0;
 196   4              addOkFlag     = 1;
 197   4              rmvAddErrFlag = 0;
 198   4              removeOkFlag  = 0;
 199   4              addOkInit     = 0;
 200   4            }
 201   3          }
 202   2              //----------------DS.Chin
 203   2              else if(uart_data[1] == 'r' && uart_data[3] == 's' && uart_data[5] == 't')/*$reset#*/
 204   2              {
 205   3                 uart_send();
 206   3                 power_on_flag = 1;
 207   3                 power_ok_flag = 0;
 208   3                 power_err_flag = 0;
 209   3                 conditionst_flag = 0;
 210   3                 conditionsn_flag = 0;
 211   3                 alarm_trigger_flag = 0;
 212   3                 alarm_normal_flag = 0;
 213   3                 sensor_trigger_flag = 0;
 214   3                 sensor_normal_flag = 0;
 215   3                 control_flag = 0;
 216   3                 power_on_init = 0;
 217   3              }
 218   2        }
 219   1      }
 220          
 221          /*****************************
 222          *名称:uart_send
 223          *功能:发送字符窜“&ok#"
 224          *输入:无
 225          *输出:无
 226          *修改记录:
 227          *****************************/
 228          void uart_send(void)
 229          {
 230   1        
 231   1        UARTDR='$';
 232   1        while((UARTST&0x80)==0x00);
 233   1        UARTDR='o';
 234   1        while((UARTST&0x80)==0x00);
 235   1        UARTDR='k';
 236   1        while((UARTST&0x80)==0x00);
 237   1        UARTDR='#';
 238   1        while((UARTST&0x80)==0x00);
 239   1      
 240   1      }
 241          
C51 COMPILER V9.52.0.0   UART                                                              03/30/2017 14:18:05 PAGE 5   

 242          /*****************************
 243          *名称:receive_init
 244          *功能:判断接收到的字符串是那种类型指令
 245          *输入:无
 246          *输出:无
 247          *修改记录:
 248          *****************************/
 249          //void receive_init(void)
 250          //{
 251          //  if(uartdr_buff_1==80){uart_type=1;uart_step=0;} //P
 252          //  else if(uartdr_buff==87){uart_type=2;uart_step=0;} //W 
 253          //  else if(uartdr_buff==83){uart_type=3;uart_step=0;} //S
 254          //  else if(uartdr_buff==67){uart_type=4;uart_step=0;} //C
 255          //  else if(uartdr_buff==65){uart_type=5;uart_step=0;}//A  
 256          //  else {uart_type=0;uart_step=0;}
 257          //}
 258          
 259          /*****************************
 260          *名称:receive_power
 261          *功能:判断接收到的字符串是否为"POWER OK"
 262          *输入:无
 263          *输出:无
 264          *修改记录:
 265          *****************************/
 266          //void receive_power(void)
 267          //{
 268          //  uart_step+=1;
 269          //  if(uartdr_buff_1!=power_ok[uart_step]) uart_type=0;
 270          //  if(uart_step>=7)
 271          //  {
 272          //    uart_type=0;
 273          //    power_ok_flag=1;
 274          //  power_ok_init=0;
 275          //  }
 276          //}
 277          
 278          /*****************************
 279          *名称:receive_wlan
 280          *功能:判断接收到的字符串是否为"WLAN NG"或者"WLAN OK"
 281          *输入:无
 282          *输出:无
 283          *修改记录:
 284          *****************************/
 285          //void receive_wlan(void)
 286          //{
 287          //  uart_step+=1;
 288          //  if(uart_step<5)
 289          //  {
 290          //    if(uartdr_buff_1!=wlan_ng[uart_step]) uart_type=0;
 291          //  }
 292          
 293          //  if(uart_step==5)
 294          //  {
 295          //    if(uartdr_buff_1==78) wlan_type=0;
 296          //  else if(uartdr_buff_1==79)wlan_type=1;
 297          //  else uart_type=0;
 298          //  }
 299          
 300          //  if(uart_step==6)
 301          //  {
 302          //    if(wlan_type==0)
 303          //  {
C51 COMPILER V9.52.0.0   UART                                                              03/30/2017 14:18:05 PAGE 6   

 304          //    if(uartdr_buff_1==71)
 305          //      if(power_ok_flag==1){wlan_ng_flag=1;wlan_ng_init=0;}
 306          //  }
 307          //  else
 308          //  {
 309          //    if(uartdr_buff_1==75)
 310          //      if(power_ok_flag==1){wlan_ok_flag=1;wlan_ok_init=0;}
 311          //  }
 312          
 313          //  uart_type=0;
 314          //  }
 315          //}
 316          
 317          /*****************************
 318          *名称:receive_sensor
 319          *功能:判断接收到的字符串是否为"SENSOR TRIGGER"或者"SENSOR NORMAL"
 320          *输入:无
 321          *输出:无
 322          *修改记录:
 323          *****************************/
 324          //void receive_sensor(void)
 325          //{
 326          //  uart_step+=1;
 327          //  if(uart_step<7)
 328          //    if(uartdr_buff_1!=sensor_trigger[uart_step]) uart_type=0;
 329          
 330          
 331          //  if(uart_step==7)
 332          //  {
 333          //    if(uartdr_buff_1==84) sensor_type=0;
 334          //  else if(uartdr_buff_1==32) sensor_type=1;
 335          //  else uart_type=0;
 336          //  }
 337          
 338          //  if(uart_step>7)
 339          //  {
 340          //    if(sensor_type==0)
 341          //  {
 342          //    if(uartdr_buff_1!=sensor_trigger[uart_step]) uart_type=0;
 343          //    if(uart_step>=13)
 344          //    {
 345          //      uart_type=0;
 346          //    if(power_ok_flag==1){sensor_trigger_flag=1;sensor_trigger_init=0;}
 347          //    }
 348          //  }
 349          //  else
 350          //  {
 351          //    if(uartdr_buff_1!=sensor_normal[uart_step]) uart_type=0;
 352          //    if(uart_step>=13)
 353          //    {
 354          //      uart_type=0;
 355          //    if(power_ok_flag==1){sensor_normal_flag=1;sensor_normal_init=0;}
 356          //    }
 357          //  }
 358          //  }
 359          //}
 360          
 361          /*****************************
 362          *名称:receive_control
 363          *功能:判断接收到的字符串是否为"CONTROL"
 364          *输入:无
 365          *输出:无
C51 COMPILER V9.52.0.0   UART                                                              03/30/2017 14:18:05 PAGE 7   

 366          *修改记录:
 367          *****************************/
 368          //void receive_control(void)
 369          //{
 370          //  uart_step+=1;
 371          //  if(uartdr_buff_1!=control[uart_step]) uart_type=0;
 372          
 373          //  if(uart_step==6)
 374          //  {
 375          //    uart_type=0;
 376          //  if(power_ok_flag==1){control_flag=1;control_init=0;}
 377          //  }
 378          //}
 379          
 380          
 381          /*****************************
 382          *名称:receive_alarm
 383          *功能:判断接收到的字符串是否为"ALARM TRIGGER"或者"ALARM NORMAL"
 384          *输入:无
 385          *输出:无
 386          *修改记录:
 387          *****************************/
 388          //void receive_alarm(void)
 389          //{
 390          //  uart_step+=1;
 391          //  if(uart_step<6)
 392          //    if(uartdr_buff_1!=alarm_trigger[uart_step]) 
 393          //  uart_type=0;
 394          
 395          //  if(uart_step==6)
 396          //  {
 397          //    if(uartdr_buff_1==84) alarm_type=0;
 398          //  else if(uartdr_buff_1==32) alarm_type=1;
 399          //  else uart_type=0;
 400          //  }
 401          
 402          //  if(uart_step>6)
 403          //  {
 404          //    if(sensor_type==0)
 405          //  {
 406          //    if(uartdr_buff_1!=alarm_trigger[uart_step]) uart_type=0;
 407          //    if(uart_step>=12)
 408          //    {
 409          //      uart_type=0;
 410          //    if(power_ok_flag==1){alarm_trigger_flag=1;alarm_trigger_init=0;}
 411          //    }
 412          //  }
 413          //  else
 414          //  {
 415          //    if(uartdr_buff_1!=alarm_normal[uart_step]) uart_type=0;
 416          //    if(uart_step>=12)
 417          //    {
 418          //      uart_type=0;
 419          //    if(power_ok_flag==1){alarm_normal_flag=1;alarm_normal_init=0;}
 420          //    }
 421          //  }
 422          //  }
 423          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    526    ----
C51 COMPILER V9.52.0.0   UART                                                              03/30/2017 14:18:05 PAGE 8   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     15    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
